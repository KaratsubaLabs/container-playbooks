static_resources:
  listeners:
  - name: http-listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          http_filters:
          - name: envoy.filters.http.router
          route_config:
            name: all
            virtual_hosts:
            {% for service in services -%}
            - name: {{service.cluster}}
              domains: [ "{{service.url}}" ]
              routes:
              - match: { prefix: "/.well-known/acme-challenge" }
                route:
                  cluster: letsencrypt
              - match: { prefix: "/" }
                redirect:
                  https_redirect: true
            {% endfor %}

  {% if disable_ssl == "false" -%}
  - name: https-listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
    listener_filters:
    - name: envoy.filters.listener.tls_inspector
    filter_chains:
    {% for service in services -%}
    {% if service.enabled == "true" -%}
    - filter_chain_match:
        server_names: [ "{{service.url}}" ]
      filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          http_filters:
          - name: envoy.filters.http.router
          route_config:
            name: all
            virtual_hosts:
            - name: {{service.cluster}}
              domains: "*"
              routes:
              - match: { prefix: "/" }
                route: { cluster: {{service.cluster}} }
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            alpn_protocols: ["h2,http/1.1"]
            tls_params: { tls_minimum_protocol_version: "TLSv1_2" }
            tls_certificates:
              certificate_chain: { filename: "/etc/letsencrypt/live/{{service.url}}/fullchain.pem" }
              private_key: { filename: "/etc/letsencrypt/live/{{service.url}}/privkey.pem" }
    {% endif -%}
    {% endfor -%}
  {% endif %}

  clusters:
  {% for service in services -%}
  - name: {{service.cluster}}
    connect_timeout: 3s
    type: strict_dns
    load_assignment:
      cluster_name: {{service.cluster}}
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: {{service.address}}
                port_value: {{service.port}}
  {% endfor -%}
  - name: letsencrypt
    connect_timeout: 3s
    type: strict_dns
    load_assignment:
      cluster_name: letsencrypt
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: letsencrypt-app
                port_value: 80

